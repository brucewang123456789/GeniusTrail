name: Fault Injection, DAST Scan & Synthetic Monitoring Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup_and_install:
    name: Setup & Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.13.5" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install fakeredis
    outputs:
      python-version: ${{ matrix.python-version }}

  fault_injection:
    name: Fault Injection Tests
    needs: setup_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Run Fault Injection suite
        run: python -m pytest test/integration/test_fault_injection.py

  dast_scan:
    name: DAST Scan Tests
    needs: setup_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Run DAST Scan suite
        run: python -m pytest test/integration/test_dast_scan.py

  synthetic_monitoring:
    name: Synthetic Monitoring Tests
    needs: setup_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Run Synthetic Monitoring suite
        run: python -m pytest test/integration/test_synthetic_alerting.py

  upload-artifacts:
    name: Upload Integration Test Results
    if: always()
    needs:
      - fault_injection
      - dast_scan
      - synthetic_monitoring
    runs-on: ubuntu-latest
    steps:
      - name: Upload pytest logs
        uses: actions/upload-artifact@v4
        with:
          name: integration-logs
          path: |
            **/pytest*.xml
