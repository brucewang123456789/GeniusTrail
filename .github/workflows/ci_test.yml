name: CI Test Environment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7
        ports: ["6379:6379"]
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=5
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U test -d testdb"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=5

    strategy:
      matrix:
        python-version: ["3.13.5"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore private core
        run: |
          echo "${{ secrets.PRIVATE_CORE_ZIP_B64 }}" > core.b64
          base64 --decode core.b64 > PrivateCore.zip
          unzip -o PrivateCore.zip -d core

      - name: Install OS packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential git curl wget unzip netcat-openbsd \
            libpq-dev redis-tools postgresql-client \
            libssl-dev libffi-dev

      - name: Set up Python ${{ matrix.python-version }} and cache pip
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install -e core[dev]
          pip install -e .[dev]
          pip install jsonschema pydantic-settings respx>=0.20.0

      - name: Export environment variables
        run: |
          echo "VELTRAX_API_TOKEN=${{ secrets.VELTRAX_API_TOKEN }}" >> $GITHUB_ENV
          echo "CI=true"                     >> $GITHUB_ENV
          echo "SKIP_SERVICE_START=true"     >> $GITHUB_ENV
          echo "PYTHONUTF8=1"                >> $GITHUB_ENV

      - name: Display versions for debug
        run: |
          echo "Python: $(python --version)"
          echo "pip: $(pip --version)"
          echo "Redis CLI: $(redis-cli --version || echo 'not installed')"
          echo "Postgres client: $(psql --version || echo 'not installed')"

      - name: Run pytest
        run: pytest test -q
