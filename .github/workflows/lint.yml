name: Lint and Type Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.13' ]

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Restore private core
        run: |
          echo "${{ secrets.PRIVATE_CORE_ZIP_B64 }}" > core.b64
          base64 --decode core.b64 > PrivateCore.zip
          unzip -o PrivateCore.zip -d core
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          pip install -e .[dev]
          pip install jsonschema pydantic-settings
      - name: Debug modules
        run: |
          python -c "import sys; print('Python Path:', sys.path)"
          python -c "import api_server; print('api_server found')" || echo "api_server not found"
          python -c "import veltraxor; print('veltraxor found')" || echo "veltraxor not found"
          python -c "import llm_client; print('llm_client found')" || echo "llm_client not found"
      - name: Run ruff lint
        run: ruff check . --max-complexity 15
      - name: Check Black formatting
        run: black --check .
      - name: Run Black formatting (auto-fix)
        run: |
          black .
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "auto-format with black" || echo "no changes to commit"
          git push
      - name: Run mypy type check
        run: python -m mypy .